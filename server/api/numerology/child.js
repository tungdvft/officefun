import { defineEventHandler, createError } from 'h3';
import { callGeminiApi } from '../utils/commonApi';
import NUMEROLOGY_MEANINGS, { NumerologyUtils } from '../utils/numerology-meanings.js';

function getLifePathNumber(birthDate) {
  if (!/^\d{2}[\/-]\d{2}[\/-]\d{4}$/.test(birthDate)) throw createError({ statusCode: 400, statusMessage: 'Ng√†y sinh kh√¥ng h·ª£p l·ªá.' });
  const [day, month, year] = birthDate.replace(/-/g, '/').split('/').map(Number);
  return NumerologyUtils.reduceToSingleDigit(day + month + year) || 9;
}

function getSoulUrgeNumber(name) {
  const vowels = 'aeiou√°√†·∫£√£·∫°√©√®·∫ª·∫Ω·∫π√≠√¨·ªâƒ©·ªã√≥√≤·ªè√µ·ªç√∫√π·ªß≈©·ª•√Ω·ª≥·ª∑·ªπ·ªµ';
  const valueMap = { a: 1, e: 5, i: 9, o: 6, u: 3, √°: 1, √†: 1, ·∫£: 1, √£: 1, ·∫°: 1, √©: 5, √®: 5, ·∫ª: 5, ·∫Ω: 5, ·∫π: 5, √≠: 9, √¨: 9, ·ªâ: 9, ƒ©: 9, ·ªã: 9, √≥: 6, √≤: 6, ·ªè: 6, √µ: 6, ·ªç: 6, √∫: 3, √π: 3, ·ªß: 3, ≈©: 3, ·ª•: 3, √Ω: 7, ·ª≥: 7, ·ª∑: 7, ·ªπ: 7, ·ªµ: 7 };
  const sum = name.toLowerCase().split('').reduce((acc, char) => vowels.includes(char) ? acc + (valueMap[char] || 0) : acc, 0);
  return NumerologyUtils.reduceToSingleDigit(sum) || 9;
}

function getPersonalityNumber(name) {
  const vowels = 'aeiou√°√†·∫£√£·∫°√©√®·∫ª·∫Ω·∫π√≠√¨·ªâƒ©·ªã√≥√≤·ªè√µ·ªç√∫√π·ªß≈©·ª•√Ω·ª≥·ª∑·ªπ·ªµ';
  const valueMap = { b: 2, c: 3, d: 4, ƒë: 4, g: 7, h: 8, k: 2, l: 3, m: 4, n: 5, p: 7, q: 8, r: 9, s: 1, t: 2, v: 4, x: 6 };
  const sum = name.toLowerCase().split('').reduce((acc, char) => !vowels.includes(char) && /[a-zƒë]/.test(char) ? acc + (valueMap[char] || 0) : acc, 0);
  return NumerologyUtils.reduceToSingleDigit(sum) || 9;
}

function getDestinyNumber(name) {
  const valueMap = { a: 1, b: 2, c: 3, d: 4, e: 5, g: 7, h: 8, i: 9, k: 2, l: 3, m: 4, n: 5, o: 6, p: 7, q: 8, r: 9, s: 1, t: 2, u: 3, v: 4, x: 6, y: 7, ƒë: 4, √°: 1, √†: 1, ·∫£: 1, √£: 1, ·∫°: 1, √©: 5, √®: 5, ·∫ª: 5, ·∫Ω: 5, ·∫π: 5, √≠: 9, √¨: 9, ·ªâ: 9, ƒ©: 9, ·ªã: 9, √≥: 6, √≤: 6, ·ªè: 6, √µ: 6, ·ªç: 6, √∫: 3, √π: 3, ·ªß: 3, ≈©: 3, ·ª•: 3, √Ω: 7, ·ª≥: 7, ·ª∑: 7, ·ªπ: 7, ·ªµ: 7 };
  const sum = name.toLowerCase().split('').reduce((acc, char) => acc + (valueMap[char] || 0), 0);
  return NumerologyUtils.reduceToSingleDigit(sum) || 9;
}

function getPersonalYear(birthDate, year) {
  const [day, month] = birthDate.replace(/-/g, '/').split('/').map(Number);
  return NumerologyUtils.reduceToSingleDigit(day + month + year) || 9;
}

export default defineEventHandler(async (event) => {
  const { childName, birthDate } = await readBody(event);
  if (!childName || !birthDate) throw createError({ statusCode: 400, statusMessage: 'Thi·∫øu th√¥ng tin.' });

  const lifePath = getLifePathNumber(birthDate);
  const soulUrge = getSoulUrgeNumber(childName);
  const personality = getPersonalityNumber(childName);
  const destiny = getDestinyNumber(childName);
  const currentYear = new Date().getFullYear();
  const personalYear = getPersonalYear(birthDate, currentYear);

  const lifePathData = NUMEROLOGY_MEANINGS.lifePath[lifePath] || NUMEROLOGY_MEANINGS.lifePath[1];
  const soulUrgeData = NUMEROLOGY_MEANINGS.soulUrge[soulUrge] || NUMEROLOGY_MEANINGS.soulUrge[1];
  const personalityData = NUMEROLOGY_MEANINGS.personality[personality] || NUMEROLOGY_MEANINGS.personality[1];
  const destinyData = NUMEROLOGY_MEANINGS.expression[destiny] || NUMEROLOGY_MEANINGS.expression[1]; // D√πng expression cho Destiny
  const personalYearData = NUMEROLOGY_MEANINGS.personalYear[personalYear] || NUMEROLOGY_MEANINGS.personalYear[1];

  const tenYearMap = Array.from({ length: 10 }, (_, i) => {
    const year = currentYear + i;
    const py = getPersonalYear(birthDate, year);
    return { year, personalYear: py, theme: NUMEROLOGY_MEANINGS.personalYear[py].theme };
  });

  const prompt = `D·ª±a tr√™n th·∫ßn s·ªë h·ªçc v√† d·ªØ li·ªáu t·ª´ file numerology-meanings.js, ph√¢n t√≠ch b√© ${childName} (ng√†y sinh: ${birthDate}). 
    - S·ªë ƒê∆∞·ªùng ƒë·ªùi: ${lifePath} (${lifePathData.theme}, ƒëi·ªÉm m·∫°nh: ${lifePathData.strengths.join(', ')}, ƒëi·ªÉm y·∫øu: ${lifePathData.challenges.join(', ')}),
    - S·ªë Linh h·ªìn: ${soulUrge} (${soulUrgeData.desire}),
    - S·ªë Nh√¢n c√°ch: ${personality} (${personalityData.theme}),
    - S·ªë S·ª© m·ªánh: ${destiny} (${destinyData.theme}),
    - NƒÉm c√° nh√¢n ${currentYear}: ${personalYear} (${personalYearData.theme}).
    Tr·∫£ v·ªÅ JSON v·ªõi "childAnalysis":
    1. "numbers": { lifePath: {number, symbol, theme, strengths, challenges}, soulUrge: {number, symbol, desire, motivation}, personality: {number, symbol, theme, strengths}, destiny: {number, symbol, theme, talents} },
    2. "personalYear": { number, theme, focus, keywords },
    3. "personalityTraits": M√¥ t·∫£ t√≠nh c√°ch b√© (4-5 c√¢u),
    4. "potential": Ti·ªÅm nƒÉng b√© (4-5 c√¢u),
    5. "challenges": Th·ª≠ th√°ch b√© c√≥ th·ªÉ g·∫∑p (4-5 c√¢u),
    6. "shortTerm": L·ªùi khuy√™n ng·∫Øn h·∫°n cho th√°ng hi·ªán t·∫°i (3-4 c√¢u),
    7. "mediumTerm": L·ªùi khuy√™n trung h·∫°n cho nƒÉm ${currentYear} (4-5 c√¢u),
    8. "longTerm": L·ªùi khuy√™n d√†i h·∫°n (5-6 c√¢u),
    9. "tenYearMap": M·∫£ng 10 nƒÉm t·ªõi, m·ªói nƒÉm c√≥ {year, personalYear, theme, advice (2-3 c√¢u)}.
    Symbol l·∫•y t·ª´ numerology-meanings.js, n·∫øu kh√¥ng c√≥ th√¨ d√πng emoji ƒë∆°n gi·∫£n nh∆∞ "üåü". Kh√¥ng d√πng Markdown, ch·ªâ tr·∫£ JSON thu·∫ßn t√∫y!`;

  try {
    const data = await callGeminiApi(prompt);
    if (!data || !data.childAnalysis) throw new Error('Gemini API l·ªói');
    return { childAnalysis: { ...data.childAnalysis, tenYearMap } }; // G·ªôp tenYearMap t·ª´ t√≠nh to√°n
  } catch (error) {
    console.error('L·ªói:', error.message);
    return getFallbackAnalysis(childName, birthDate, lifePath, soulUrge, personality, destiny, personalYear, lifePathData, soulUrgeData, personalityData, destinyData, personalYearData, tenYearMap, currentYear);
  }
});

function getFallbackAnalysis(childName, birthDate, lifePath, soulUrge, personality, destiny, personalYear, lifePathData, soulUrgeData, personalityData, destinyData, personalYearData, tenYearMap, currentYear) {
  const currentMonth = new Date().toLocaleString('vi', { month: 'long' });
  return {
    childAnalysis: {
      numbers: {
        lifePath: { 
          number: lifePath, 
          symbol: lifePathData.symbol || 'üåü', 
          theme: lifePathData.theme, 
          strengths: lifePathData.strengths.join(', '), // ƒê·∫£m b·∫£o l√† chu·ªói
          challenges: lifePathData.challenges.join(', ') // ƒê·∫£m b·∫£o l√† chu·ªói
        },
        soulUrge: { 
          number: soulUrge, 
          symbol: '‚ù§Ô∏è', 
          desire: soulUrgeData.desire, 
          motivation: soulUrgeData.motivation 
        },
        personality: { 
          number: personality, 
          symbol: personalityData.symbol || 'üåÄ', 
          theme: personalityData.theme, 
          strengths: personalityData.strengths.join(', ') // ƒê·∫£m b·∫£o l√† chu·ªói
        },
        destiny: { 
          number: destiny, 
          symbol: destinyData.symbol || '‚ö°', 
          theme: destinyData.theme, 
          talents: destinyData.talents.join(', ') // ƒê·∫£m b·∫£o l√† chu·ªói
        }
      },
      personalYear: { 
        number: personalYear, 
        theme: personalYearData.theme, 
        focus: personalYearData.focus.join(', '), 
        keywords: personalYearData.keywords.join(', ') 
      },
      personalityTraits: `B√© ${childName} mang nƒÉng l∆∞·ª£ng ${lifePathData.theme} (${lifePath}) v·ªõi ${lifePathData.strengths[0].toLowerCase()}. S·ªë linh h·ªìn ${soulUrge} cho th·∫•y b√© khao kh√°t ${soulUrgeData.desire.toLowerCase()}. S·ªë nh√¢n c√°ch ${personality} th·ªÉ hi·ªán b√© ${personalityData.strengths[0].toLowerCase()} trong giao ti·∫øp. S·ªë s·ª© m·ªánh ${destiny} ƒë·ªãnh h∆∞·ªõng b√© th√†nh ${destinyData.theme.toLowerCase()}.`,
      potential: `B√© c√≥ ti·ªÅm nƒÉng l·ªõn v·ªõi ${lifePathData.strengths[1].toLowerCase()} t·ª´ s·ªë ƒë∆∞·ªùng ƒë·ªùi. S·ªë linh h·ªìn ${soulUrge} h·ªó tr·ª£ b√© ph√°t tri·ªÉn ${soulUrgeData.desire.toLowerCase()}. B√© c√≥ th·ªÉ t·ªèa s√°ng trong ${destinyData.careers[0].toLowerCase()} n·∫øu ƒë∆∞·ª£c h∆∞·ªõng d·∫´n ƒë√∫ng. T√≠nh ${personalityData.strengths[1].toLowerCase()} s·∫Ω gi√∫p b√© n·ªïi b·∫≠t.`,
      challenges: `Th√°ch th·ª©c l·ªõn nh·∫•t c·ªßa b√© l√† ${lifePathData.challenges[0].toLowerCase()} t·ª´ s·ªë ƒë∆∞·ªùng ƒë·ªùi. B√© c√≥ th·ªÉ g·∫∑p kh√≥ khƒÉn v·ªõi ${soulUrgeData.desire.toLowerCase()} n·∫øu kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£. S·ªë nh√¢n c√°ch ${personality} khi·∫øn b√© d·ªÖ ${personalityData.challenges[0].toLowerCase()}. H√£y ch√∫ √Ω ƒë·ªÉ b√© kh√¥ng b·ªã √°p l·ª±c.`,
      shortTerm: `Trong th√°ng ${currentMonth}, khuy·∫øn kh√≠ch b√© tham gia ho·∫°t ƒë·ªông ${personalYearData.focus[0].toLowerCase()}. H√£y t·∫°o m√¥i tr∆∞·ªùng vui v·∫ª ƒë·ªÉ b√© ph√°t tri·ªÉn. ƒêi·ªÅu n√†y gi√∫p b√© t·ª± tin h∆°n.`,
      mediumTerm: `Trong nƒÉm ${currentYear}, t·∫≠p trung v√†o ${lifePathData.strengths[0].toLowerCase()} c·ªßa b√© qua c√°c ho·∫°t ƒë·ªông ph√π h·ª£p. NƒÉng l∆∞·ª£ng ${personalYearData.theme.toLowerCase()} h·ªó tr·ª£ b√© h·ªçc h·ªèi. H√£y ki√™n nh·∫´n v√† ƒë·ªìng h√†nh c√πng b√©. ƒê·ª´ng √©p bu·ªôc qu√° m·ª©c ƒë·ªÉ tr√°nh cƒÉng th·∫≥ng.`,
      longTerm: `V·ªÅ l√¢u d√†i, ${lifePathData.theme} (${lifePath}) cho th·∫•y b√© c√≥ ti·ªÅm nƒÉng l·ªõn v·ªõi ${lifePathData.strengths[0].toLowerCase()}. H√£y h∆∞·ªõng b√© theo ${destinyData.careers[0].toLowerCase()}. Ch√∫ √Ω kh·∫Øc ph·ª•c ${lifePathData.challenges[0].toLowerCase()} b·∫±ng c√°ch d·∫°y b√© qu·∫£n l√Ω c·∫£m x√∫c. ƒêi·ªÅu n√†y gi√∫p b√© tr∆∞·ªüng th√†nh to√†n di·ªán. Ki√™n tr√¨ l√† ch√¨a kh√≥a.`,
      tenYearMap: tenYearMap.map(item => ({
        year: item.year,
        personalYear: item.personalYear,
        theme: item.theme,
        advice: `Trong nƒÉm ${item.year}, nƒÉng l∆∞·ª£ng ${item.theme.toLowerCase()} s·∫Ω chi ph·ªëi b√©. H√£y khuy·∫øn kh√≠ch b√© ${NUMEROLOGY_MEANINGS.personalYear[item.personalYear].focus[0].toLowerCase()}. ƒêi·ªÅu n√†y gi√∫p b√© ph√°t tri·ªÉn t·ªët h∆°n.`
      }))
    }
  };
}